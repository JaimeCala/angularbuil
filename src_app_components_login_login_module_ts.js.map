{"version":3,"file":"src_app_components_login_login_module_ts.js","mappings":"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","sources":["./src/app/components/login/login-routing.module.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/login/login.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login.component';\r\n\r\n\r\nconst routes: Routes = [{ path: '', component: LoginComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormGroup,FormControl, Validators} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { FormBuilder} from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\n//import { isRegExp } from 'util';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n //para el ojo de password\r\n  showPasswordField = true;\r\n\r\n  //showUsernameField = true;\r\n hide = true;\r\n\r\n  //loginForm: FormGroup;\r\n\r\n  private isValidEmail: any = /^(([^<>()\\[\\]\\\\.,;:\\s@”]+(\\.[^<>()\\[\\]\\\\.,;:\\s@”]+)*)|(“.+”))@((\\[[0–9]{1,3}\\.[0–9]{1,3}\\.[0–9]{1,3}\\.[0–9]{1,3}])|(([a-zA-Z\\-0–9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n  private subscription: Subscription = new Subscription();\r\n\r\n  loginForm = this.formBuilder.group(\r\n   { username: ['',[Validators.required, Validators.pattern(this.isValidEmail)]],\r\n    password:['',[Validators.required, Validators.minLength(6)]],\r\n  });\r\n  constructor(\r\n    private authService: AuthService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void{\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  onLogin(): void{\r\n\r\n    if(this.loginForm.invalid){\r\n      return;\r\n    }\r\n\r\n    const formvalue = this.loginForm.value;\r\n    this.subscription.add(\r\n      this.authService.login(formvalue).subscribe((res)=>{\r\n        if(res){\r\n          this.router.navigate(['/admin']);\r\n\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  getErrorMessage(field: string): string{\r\n      let message;\r\n      if(this.loginForm.get(field).errors.required){\r\n        message = ' Este campo es requerido';\r\n      }else if(this.loginForm.get(field).hasError('pattern')){\r\n        message = 'No es correo válido';\r\n\r\n      }else if(this.loginForm.get(field).hasError('minlength')){\r\n        const minLength = this.loginForm.get(field).errors?.minlength\r\n        .requiredLength;\r\n        message = `Este campo requiere un mínimo de ${minLength} caracteres`;\r\n      }\r\n      return message;\r\n\r\n  }\r\n  isValidField(field: string): boolean{\r\n    return (\r\n    (this.loginForm.get(field).touched || this.loginForm.get(field).dirty) &&\r\n    !this.loginForm.get(field).valid);\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n","<div class=\"container\">\r\n  <mat-card class=\"card_inicio_sesion\">\r\n    <mat-card-content>\r\n      <div class=\"header\">\r\n        <h2>INICIAR SESIÓN</h2>\r\n      </div>\r\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\" name=\"loginForm\">\r\n        <mat-form-field class=\"full-width-input\" appearance=\"outline\">\r\n          <mat-label>Correo</mat-label>\r\n          <input type=\"username\" formControlName=\"username\" matInput required />\r\n          <mat-error *ngIf=\"isValidField('username')\">\r\n            {{ getErrorMessage(\"username\") }}\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <!--<span class=\"aLink\">Olvidó su contraseña?</span>-->\r\n        <mat-form-field class=\"full-width-input\" appearance=\"outline\" separator>\r\n          <mat-label>Contraseña</mat-label>\r\n          <input\r\n            [type]=\"hide ? 'password' : 'text'\"\r\n            formControlName=\"password\"\r\n            matInput\r\n            required\r\n          />\r\n\r\n          <button\r\n            type=\"button\"\r\n            mat-icon-button\r\n            matSuffix\r\n            (click)=\"hide = !hide\"\r\n            [attr.aria-label]=\"'Hide password'\"\r\n            [attr.aria-pressed]=\"hide\"\r\n          >\r\n            <mat-icon>{{ hide ? \"visibility_off\" : \"visibility\" }}</mat-icon>\r\n          </button>\r\n          <mat-error *ngIf=\"isValidField('password')\">\r\n            {{ getErrorMessage(\"password\") }}\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          [disabled]=\"loginForm.invalid\"\r\n          mat-raised-button\r\n          color=\"primary\"\r\n        >\r\n          INGRESAR\r\n        </button>\r\n        <br />\r\n\r\n        <span id=\"linkforgot\"\r\n          ><a routerLink=\"/submitemail\"> Olvidé mi contraseña</a></span\r\n        >\r\n      </form>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <div class=\"panels-container\">\r\n    <div class=\"panel left-panel\">\r\n      <div class=\"content\">\r\n        <h3>Bienvenido...!!!</h3>\r\n        <p>\r\n          «Tu trabajo va a llenar gran parte de tu vida, la única manera de\r\n          estar realmente satisfecho es hacer lo que creas que es un gran\r\n          trabajo y la única manera de hacerlo es amar lo que haces. Si no lo\r\n          has encontrado aún, sigue buscando. Como con todo lo que tiene que ver\r\n          con el corazón, lo sabrás cuando lo hayas encontrado.» STEVE JOBS\r\n        </p>\r\n      </div>\r\n      <img src=\"../../../assets/imagehome/add_cart.svg\" class=\"image\" alt=\"\" />\r\n    </div>\r\n\r\n    <div class=\"panel right-panel\">\r\n      <img src=\"../../../assets/imagehome/login.svg\" class=\"image\" alt=\"\" />\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { LoginComponent } from './login.component';\r\nimport { MaterialModule } from '../../material.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent],\r\n  imports: [\r\n    CommonModule,\r\n    LoginRoutingModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n  ]\r\n})\r\nexport class LoginModule { }\r\n"],"names":[],"sourceRoot":"webpack:///"}