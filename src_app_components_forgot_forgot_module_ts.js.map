{"version":3,"file":"src_app_components_forgot_forgot_module_ts.js","mappings":"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","sources":["./src/app/components/forgot/forgot-routing.module.ts","./src/app/components/forgot/forgot.component.ts","./src/app/components/forgot/forgot.component.html","./src/app/components/forgot/forgot.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ForgotComponent } from './forgot.component';\n\nconst routes: Routes = [{ path: '', component: ForgotComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ForgotRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { ResetPassword } from 'src/app/models/reset-password.interface';\nimport { LoginService } from 'src/app/service/login.service';\n\n@Component({\n  selector: 'app-forgot',\n  templateUrl: './forgot.component.html',\n  styleUrls: ['./forgot.component.css'],\n})\nexport class ForgotComponent implements OnInit {\n  //para el ojo de password\n  showPasswordField = true;\n\n  //showUsernameField = true;\n  hide = true;\n\n  token = '';\n\n  resetPassword: any = { resetPasswordToken: '', password: '' };\n\n  resResetPass = '';\n\n  //loginForm: FormGroup;\n\n  private isValidEmail: any =\n    /^(([^<>()\\[\\]\\\\.,;:\\s@”]+(\\.[^<>()\\[\\]\\\\.,;:\\s@”]+)*)|(“.+”))@((\\[[0–9]{1,3}\\.[0–9]{1,3}\\.[0–9]{1,3}\\.[0–9]{1,3}])|(([a-zA-Z\\-0–9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  private subscription: Subscription = new Subscription();\n  constructor(\n    private loginService: LoginService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  forgotForm = this.formBuilder.group(\n    {\n      password: ['', [Validators.required, Validators.minLength(8)]],\n\n      confirm_password: ['', [Validators.required]],\n    },\n    {\n      validators: this.confirmPasswordMatch('password', 'confirm_password'),\n    }\n  );\n\n  ngOnInit(): void {\n    this.activatedRoute.queryParams.subscribe((params) => {\n      this.token = params['token'];\n      console.log('parametro token ==>' + params);\n      console.log(params['token']);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  onForgot(): void {\n    if (this.forgotForm.invalid) {\n      return;\n    }\n\n    const formvalue = this.forgotForm.value;\n    const newPassword = this.forgotForm.get('password').value;\n    const token = this.token;\n    //console.log(formvalue);\n\n    //this.resetPassword.push(token);\n    //this.resetPassword.push(newPassword);\n    this.resetPassword.resetPasswordToken = token;\n    this.resetPassword.password = newPassword;\n    console.log(this.resetPassword);\n\n    //TODO: envia nuevo password\n    this.subscription.add(\n      this.loginService\n        .resetForgotPassword(this.resetPassword)\n        .subscribe((res) => {\n          if (res) {\n            //this.router.navigate(['/admin']);\n            this.resResetPass = res;\n          }\n        })\n    );\n  }\n\n  confirmPasswordMatch(controlName: string, matchingControlName: string) {\n    return (forgotForm) => {\n      const control = forgotForm.controls[controlName];\n      const matchingControl = forgotForm.controls[matchingControlName];\n\n      if (control.value !== matchingControl.value) {\n        matchingControl.setErrors({ confirmPasswordMatches: true });\n      } else {\n        matchingControl.setErrors(null);\n      }\n    };\n  }\n\n  getErrorMessage(field: string): string {\n    let message;\n\n    if (this.forgotForm.get(field).errors.required) {\n      message = ' Este campo es requerido';\n    } else if (this.forgotForm.get(field).hasError('minlength')) {\n      const minLength =\n        this.forgotForm.get(field).errors?.minlength.requiredLength;\n      message = `Este campo requiere un mínimo de ${minLength} caracteres`;\n    } else if (this.forgotForm.get(field).errors.confirmPasswordMatches) {\n      message = 'No coinciden las contraseñas';\n    }\n\n    return message;\n  }\n  isValidField(field: string): boolean {\n    return (\n      (this.forgotForm.get(field).touched ||\n        this.forgotForm.get(field).dirty) &&\n      !this.forgotForm.get(field).valid\n    );\n  }\n}\n","<div class=\"container\">\n  <mat-card class=\"card_forgot_password\">\n    <mat-card-content>\n      <div class=\"header\">\n        <h2>RESTABLECER CONTRASEÑA</h2>\n      </div>\n      <form [formGroup]=\"forgotForm\" (ngSubmit)=\"onForgot()\" name=\"forgotForm\">\n        <!--<mat-form-field class=\"full-width-input\" appearance=\"outline\">\n          <mat-label>Correo</mat-label>\n          <input type=\"username\" formControlName=\"username\" matInput required />\n          <mat-error *ngIf=\"isValidField('username')\">\n            {{ getErrorMessage(\"username\") }}\n          </mat-error>\n        </mat-form-field>-->\n\n        <mat-form-field class=\"full-width-input\" appearance=\"outline\" separator>\n          <mat-label>Contraseña nueva</mat-label>\n          <input\n            [type]=\"hide ? 'password' : 'text'\"\n            formControlName=\"password\"\n            matInput\n            required\n          />\n\n          <button\n            type=\"button\"\n            mat-icon-button\n            matSuffix\n            (click)=\"hide = !hide\"\n            [attr.aria-label]=\"'Hide password'\"\n            [attr.aria-pressed]=\"hide\"\n          >\n            <mat-icon>{{ hide ? \"visibility_off\" : \"visibility\" }}</mat-icon>\n          </button>\n          <mat-error *ngIf=\"isValidField('password')\">\n            {{ getErrorMessage(\"password\") }}\n          </mat-error>\n        </mat-form-field>\n\n        <!--<span class=\"aLink\">Olvidó su contraseña?</span>-->\n        <mat-form-field class=\"full-width-input\" appearance=\"outline\" separator>\n          <mat-label>Confirmar contraseña</mat-label>\n          <input\n            [type]=\"hide ? 'password' : 'text'\"\n            formControlName=\"confirm_password\"\n            matInput\n            required\n          />\n\n          <button\n            type=\"button\"\n            mat-icon-button\n            matSuffix\n            (click)=\"hide = !hide\"\n            [attr.aria-label]=\"'Hide password'\"\n            [attr.aria-pressed]=\"hide\"\n          >\n            <mat-icon>{{ hide ? \"visibility_off\" : \"visibility\" }}</mat-icon>\n          </button>\n          <mat-error *ngIf=\"isValidField('confirm_password')\">\n            {{ getErrorMessage(\"confirm_password\") }}\n          </mat-error>\n        </mat-form-field>\n\n        <button\n          type=\"submit\"\n          [disabled]=\"forgotForm.invalid\"\n          mat-raised-button\n          color=\"primary\"\n        >\n          GUARDAR\n        </button>\n        <br />\n        {{ resResetPass }}\n      </form>\n    </mat-card-content>\n  </mat-card>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ForgotRoutingModule } from './forgot-routing.module';\nimport { ForgotComponent } from './forgot.component';\nimport { MaterialModule } from 'src/app/material.module';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [ForgotComponent],\n  imports: [\n    CommonModule,\n    ForgotRoutingModule,\n    MaterialModule,\n    ReactiveFormsModule,\n  ],\n})\nexport class ForgotModule {}\n"],"names":[],"sourceRoot":"webpack:///"}