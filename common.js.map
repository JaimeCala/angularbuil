{"version":3,"file":"common.js","mappings":"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","sources":["./src/app/service/login.service.ts","./src/app/service/producto.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Login } from '../models/login.interface';\r\nimport { LoginUpdateUsername } from '../models/loginUp.interface';\r\nimport { Users } from '../models/userList.interface';\r\nimport { ResetPassword } from '../models/reset-password.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LoginService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  /*getTodosUsers(): Observable<Userss[]>{\r\n    return this.http\r\n    .get<Userss[]>(`${environment.API_URL}/users/userss`)\r\n    .pipe(catchError(this.handlerError));\r\n  }\r\n\r\n  getUsersId(usersId: number): Observable<Userss>{\r\n    return this.http\r\n        .get<any>(`${environment.API_URL}/users/${usersId}`)\r\n        .pipe(catchError(this.handlerError));\r\n\r\n  }*/\r\n  newLogin(login: Login): Observable<Login> {\r\n    return this.http\r\n      .post<Login>(`${environment.API_URL}/login/create`, login)\r\n      .pipe(catchError(this.handlerError));\r\n  }\r\n\r\n  submitEmailForgotPassword(username: Login): Observable<string> {\r\n    return this.http\r\n      .patch(`${environment.API_URL}/auth/enviarEmail`, username, {\r\n        responseType: 'text',\r\n      })\r\n      .pipe(catchError(this.handlerError));\r\n  }\r\n\r\n  resetForgotPassword(resetPassword: ResetPassword): Observable<string> {\r\n    return this.http\r\n      .patch(`${environment.API_URL}/login/reset-password/`, resetPassword, {\r\n        responseType: 'text',\r\n      })\r\n      .pipe(catchError(this.handlerError));\r\n  }\r\n\r\n  updateLogin(\r\n    loginId: number,\r\n    username: LoginUpdateUsername\r\n  ): Observable<Login> {\r\n    return this.http\r\n      .put<Login>(`${environment.API_URL}/login/put/${loginId}`, username)\r\n      .pipe(catchError(this.handlerError));\r\n  }\r\n\r\n  /*deleteUsers(usersId: number): Observable<{}>{\r\n      return this.http\r\n      .delete<Userss>(`${environment.API_URL}/users/${usersId}`)\r\n      .pipe(catchError(this.handlerError));\r\n\r\n  }*/\r\n\r\n  handlerError(error): Observable<never> {\r\n    let errorMessage = 'Error desconocido';\r\n    if (error) {\r\n      errorMessage = `Error ${error.message}`;\r\n    }\r\n    window.alert(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, Subject, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport Swal from 'sweetalert2';\r\nimport { Producto } from '../models/producto.interface';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductoService {\r\n\r\n   private _listenersProducto = new Subject<any>();\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getTodosProducto(): Observable<Producto[]>{\r\n    return this.http\r\n    .get<Producto[]>(`${environment.API_URL}/producto/productos`)\r\n    .pipe(catchError(this.handlerError));\r\n  }\r\n\r\n\r\n  getTodosProductoVencimiento(): Observable<Producto[]>{\r\n    return this.http\r\n    .get<Producto[]>(`${environment.API_URL}/producto/productosVencimiento`)\r\n    .pipe(catchError(this.handlerError));\r\n  }\r\n\r\n\r\n  getProductoId(imgNombre: string): Observable<Producto>{\r\n    return this.http\r\n        .get<any>(`${environment.API_URL}/img-producto/${imgNombre}`)\r\n        .pipe(catchError(this.handlerError));\r\n\r\n  }\r\n\r\n  newProducto(productos: Producto): Observable<Producto>{\r\n\r\n    return this.http\r\n    .post<Producto>(`${environment.API_URL}/producto/createProducto`,productos )\r\n    .pipe(catchError(this.handlerError));\r\n\r\n  }\r\n\r\n  updateProducto(productoId: number, producto: Producto): Observable<any>{\r\n    return this.http\r\n    .put<any>(`${environment.API_URL}/producto/${productoId}`,producto)\r\n    .pipe(catchError(this.handlerError));\r\n  }\r\n\r\n  deleteProducto(productoId: number): Observable<{}>{\r\n      return this.http\r\n      .delete<Producto>(`${environment.API_URL}/producto/delete/${productoId}`)\r\n      .pipe(catchError(this.handlerError));\r\n  }\r\n\r\n\r\n  //de la tabla roles para iterar\r\n  getRoles(): Observable<Producto[]>{\r\n    return this.http\r\n    .get<Producto[]>(`${environment.API_URL}/rol/roles`)\r\n    .pipe(catchError(this.handlerError));\r\n  }\r\n\r\n  handlerError(error): Observable<never>{\r\n      let errorMessage = 'Error desconocido'\r\n      if(error){\r\n        errorMessage = `Error ${error.message}`;\r\n      }\r\n      Swal.fire({\r\n      title: 'Error',\r\n      text: 'No se puede realizar la acciÃ³n',\r\n      icon: 'warning',\r\n      //showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Cerrar',\r\n    }).then(result =>{\r\n      if(result.value){\r\n\r\n\r\n      }\r\n      errorMessage\r\n\r\n    })\r\n      return throwError(errorMessage);\r\n\r\n  }\r\n\r\n\r\n\r\n  //------resfresh datasource----//\r\n  listenProducto():Observable<any>{\r\n    return this._listenersProducto.asObservable();\r\n  }\r\n  filterProducto(filterProducto: string){\r\n    this._listenersProducto.next(filterProducto);\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}